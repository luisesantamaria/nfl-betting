name: persist-scores

on:
  workflow_dispatch: {}
  schedule:
    # TNF (Thursday Night Football)
    # Viernes 00–06 UTC  ≈ Jueves 8:00 PM–2:00 AM ET
    - cron: "*/5 0-6 * * 5"

    # Juegos internacionales del domingo (London/Frankfurt)
    # Domingo 13–16 UTC ≈ 9:00 AM–12:00 PM ET
    - cron: "*/5 13-16 * * 0"

    # Ventanas del domingo SIN huecos (1 PM y 4:05/4:25 PM ET)
    # Domingo 17–23 UTC ≈ 1:00 PM–7:59 PM ET
    - cron: "*/5 17-23 * * 0"

    # SNF (Sunday Night Football) + buffer de OT/retrasos
    # Lunes 00–05 UTC ≈ Domingo 8:00 PM–12:59 AM ET
    - cron: "*/5 0-5 * * 1"

    # MNF (Monday Night Football) + buffer
    # Martes 00–06 UTC ≈ Lunes 8:00 PM–1:59 AM ET
    - cron: "*/5 0-6 * * 2"

    # ÚLTIMO PERSIST de la semana
    # Lunes 23:30 America/Mexico_City == Martes 05:30 UTC
    - cron: "30 5 * * 2"

permissions:
  contents: write

jobs:
  persist_scores_and_pnl:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy requests

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      # ===== 1) Persistir scores -> odds (equivalente a "odds" paso 1) =====
      - name: Persist finished scores into odds
        run: |
          set -euxo pipefail
          python scripts/persist_scores.py
          echo "--- data/live after persist_scores ---"; ls -lah data/live || true
          [ -f data/live/odds.csv ] && head -n 20 data/live/odds.csv || true

      # ===== 2) Anotar bets con profit/bankroll (equivalente a "stats" paso 2) =====
      # Importante: esto debe correr ANTES de construir PnL para que el PnL
      # vea el profit/bankroll final por week cuando ya esté todo "final".
      - name: Annotate bets with profit & bankroll (live)
        env:
          BANKROLL_INITIAL: "1000"
        run: |
          set -euxo pipefail
          python scripts/annotate_bets_with_profit_and_bankroll.py
          echo "--- data/live after annotate_bets ---"; ls -lah data/live || true
          [ -f data/live/bets.csv ] && head -n 20 data/live/bets.csv || true

      # ===== 3) Construir P&L desde bets (equivalente a "bets" paso 3) =====
      - name: Build PnL (live) from bets
        env:
          BANKROLL_INITIAL: "1000"
          # Opcional: si tus CSV viven en otra ruta, puedes sobreescribir con:
          # BPNL_BETS_CSV: "data/live/bets.csv"
          # BPNL_ODDS_CSV: "data/live/odds.csv"
        run: |
          set -euxo pipefail
          python scripts/build_pnl_live.py
          echo "--- data/live after build_pnl_live ---"; ls -lah data/live || true
          [ -f data/live/pnl.csv ] && cat data/live/pnl.csv || true

      - name: Commit & push
        run: |
          set -e
          git config user.name  "github-actions"
          git config user.email "actions@github.com"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "chore(scores): persist scores ➜ annotate bets ➜ build live PnL [skip ci]"
            # pequeño retry por si hay carreras
            for i in 1 2 3; do
              git push && break || (echo "Push failed (try $i), pulling --rebase..." && git pull --rebase && sleep 2)
            done
          else
            echo "No changes to commit."
          fi
